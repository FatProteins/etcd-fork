---
name: Reusable Arm64 E2E Workflow
on:
  workflow_call:
    inputs:
      etcdBranch:
        required: true
        type: string
      e2eTestCmd:
        required: false
        type: string
permissions: read-all
jobs:
  test:
    # this is to prevent the job to run at forked projects
    if: github.repository == 'etcd-io/etcd'
    runs-on: [self-hosted, Linux, ARM64]
    container: golang:1.19-bullseye
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: true
      matrix:
        target:
          - linux-arm64-e2e
    steps:
      - uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608 # v4.1.0
        with:
          ref: "${{ inputs.etcdBranch }}"
      # https://github.com/actions/checkout/issues/1169
      - run: git config --system --add safe.directory '*'
      - id: goversion
        run: echo "goversion=$(cat .go-version)" >> "$GITHUB_OUTPUT"
      - uses: actions/setup-go@fac708d6674e30b6ba41289acaab6d4b75aa0753 # v4.0.1
        with:
          go-version: ${{ steps.goversion.outputs.goversion }}
      - env:
          TARGET: ${{ matrix.target }}
        run: |
          set -euo pipefail
          go clean -testcache

          echo "${TARGET}"
          case "${TARGET}" in
            linux-arm64-e2e)
              GOOS=linux GOARCH=arm64 CPU=4 EXPECT_DEBUG=true RACE=true ${{ inputs.e2eTestCmd }}
              ;;
            *)
              echo "Failed to find target"
              exit 1
              ;;
          esac
